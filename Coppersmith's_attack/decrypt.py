from math import gcd
from Crypto.Util.number import *

n = 457367237304880542436060055055555592193012148617878437599237047793000650414628512535348123089289485413433946199878790539100832951224270594836765350456308125335383161586990666636302495071014959144641969430883755977046512395525456060550025887630662802699425388399863812792960223977234992212741002625646272745439385636363263484888649668748941389578823505528136069800488786273858238407171955622867223912868194648041072886522265978338213676431204036257703966869142889554041839976957837549378097815665901095845111014235259229714767889365690066259313675815389555702074452982072073168989024844777947240962169426817557982210212535661948891068681938839341660538893388943368783638853081587019386940355910992460426619609240912101116944364644971117856836483164860284621488691204456705766640240157500691630299909237698086245376589437940875113678555515431085022066522568507969380059531548174953912170683988801232224841765857037722910448988888441663117228810916075014023223644861651248283968244607769700624371984259341939521943511842206630515748371425995491132114627486368625709621810560035147566255539395354363068431117580591387265656809497933869522063557292930013516283375015680130179478230560012432326406822698144627295926323366863774672215868259
peek = 2694355682900580072436985241090312261392427612777475268250345411696610637860916012032967960098635331828263675953166915299592339564950129201227683915480715882968490041893532919437190853289879118299469992007365640978268890846814361925375583585872491701921140156110589355563845782623221592279175578040718202455821830757921757979869473755388818
ct = 288478658258886332469331941232195792274805339677526427546294191349668470105841458944952435365037471171250717720217231986590286877657551513751105326365440457947344789684945753691167405640683233539782495547382731899907759152438674995621554184638607513245470493422124637273773208793217865932884289586805268898232164642074863059806359420142989192581221623404415464348136422551616903390229300729110673046266864645871977859972240113278041645584244213214920707068417650053767551943324327736683362197799939811612178979392976213602631874670644333218575323100326997963772257295374845160557835146853272224865043300555763084381498030855758432860698231639349795575165779105202000109654492420756353747325155350416954952513976659900606291598729842062122352337795609449162865836855026244558134292535546684253359169011690360260264622293311512661124717431626121742376141352024126219009363059900151828689871398705339126973081006979076508278681527512100096845532512449255863567632337396066577484111197661456068441872582567049570508975114806730011701479980991142302671507551138089817119557749363292991878006093295295269311944025904996410050072012086034866589808068759790568801590582176222256707585141519887853108998106755146886747549573662128825551289076
e = 65537
bits=920
R=2^bits

"""


bits=920
R=2^bits
n = 457367237304880542436060055055555592193012148617878437599237047793000650414628512535348123089289485413433946199878790539100832951224270594836765350456308125335383161586990666636302495071014959144641969430883755977046512395525456060550025887630662802699425388399863812792960223977234992212741002625646272745439385636363263484888649668748941389578823505528136069800488786273858238407171955622867223912868194648041072886522265978338213676431204036257703966869142889554041839976957837549378097815665901095845111014235259229714767889365690066259313675815389555702074452982072073168989024844777947240962169426817557982210212535661948891068681938839341660538893388943368783638853081587019386940355910992460426619609240912101116944364644971117856836483164860284621488691204456705766640240157500691630299909237698086245376589437940875113678555515431085022066522568507969380059531548174953912170683988801232224841765857037722910448988888441663117228810916075014023223644861651248283968244607769700624371984259341939521943511842206630515748371425995491132114627486368625709621810560035147566255539395354363068431117580591387265656809497933869522063557292930013516283375015680130179478230560012432326406822698144627295926323366863774672215868259
a = 2694355682900580072436985241090312261392427612777475268250345411696610637860916012032967960098635331828263675953166915299592339564950129201227683915480715882968490041893532919437190853289879118299469992007365640978268890846814361925375583585872491701921140156110589355563845782623221592279175578040718202455821830757921757979869473755388818
ct = 288478658258886332469331941232195792274805339677526427546294191349668470105841458944952435365037471171250717720217231986590286877657551513751105326365440457947344789684945753691167405640683233539782495547382731899907759152438674995621554184638607513245470493422124637273773208793217865932884289586805268898232164642074863059806359420142989192581221623404415464348136422551616903390229300729110673046266864645871977859972240113278041645584244213214920707068417650053767551943324327736683362197799939811612178979392976213602631874670644333218575323100326997963772257295374845160557835146853272224865043300555763084381498030855758432860698231639349795575165779105202000109654492420756353747325155350416954952513976659900606291598729842062122352337795609449162865836855026244558134292535546684253359169011690360260264622293311512661124717431626121742376141352024126219009363059900151828689871398705339126973081006979076508278681527512100096845532512449255863567632337396066577484111197661456068441872582567049570508975114806730011701479980991142302671507551138089817119557749363292991878006093295295269311944025904996410050072012086034866589808068759790568801590582176222256707585141519887853108998106755146886747549573662128825551289076

e=65537

print(a)

P.<x> = PolynomialRing(Zmod(N))

f = R*a + x
f=f.monic()

r = f.small_roots(X = R, beta = 0.5, epsilon = 0.02)
print("Found root : ",r)

"""

x=7906215808486162232332020309752977871716122159675105827081292018898884690688347182639657849743870486266587073374298391856891713625972167837963366752345269831061325579557274955482093011031281231010698053150287342830422635895277747318957828601852912790545841375228853783798152973

p =(2**bits)*peek+x
q=n//p
phi=(p-1)*(q-1)
d=inverse(e,phi)

print(long_to_bytes(pow(ct,d,n)))

